doctype html
html
  head
    meta(charset='utf-8')
    title Account Profile - Ride With Me
    link(rel='stylesheet', href='https://cdnjs.cloudflare.com/ajax/libs/bulma/0.2.1/css/bulma.min.css')
    link(rel='stylesheet', href='https://maxcdn.bootstrapcdn.com/font-awesome/4.6.3/css/font-awesome.min.css')
    link(rel='stylesheet', href='css/style.css')
  body
    // Header
    include header

    // Content
    .container.main-container
      .columns
        .column.is-3
          aside.menu
            p.menu-label
              | Account Detail
            ul.menu-list
              li
                a.is-active(href='account.html') Account Profile
              li
                a(href='driver.html') Driver Detail
            p.menu-label
              | Your rides
            ul.menu-list
              li
                a(href='ride.html') Rides this week
        .column
          .content
            #page-signup
              h2 Basic Information
              .control.is-horizontal
                .control-label
                  label.label Name
                .control
                  input.input(type='text', value='Will Ansell')
              .control.is-horizontal
                .control-label
                  label.label E-mail
                .control
                  input.input(type='text', value='WillAnsell@jourrapide.com')

              .control.is-horizontal
                .control-label
                  label.label Phone
                .control
                  input.input(type='text', value='04069123456')

              h2 Address
              .control.is-horizontal
                .control-label
                  label.label Home Address
                .control
                  div
                    input.input#home-address(type='text')
                    #home(style='width: 500px; height: 300px;')

              .control.is-horizontal
                .control-label
                  label.label Work Address
                .control
                  div
                    input.input#work-address(type='text')
                    #work(style='width: 500px; height: 300px;')

              .control.is-horizontal
                .control-label
                  label.label Estimated people arriving at work
                .control
                  .content
                    div
                      h3.push.pdCount &nbsp;
                      .notification.is-primary
                        h3 How many people might need a ride to work.<br>
                        p (Data from the City of Melbourne's Open Data)


              .control.is-horizontal
                .control-label
                  label.label Morning Arrival Time (To Workplace)
                .control
                  .select.is-fullwidth
                    select(name='#', id='#')
                      option(value='8', selected='selected') 8:00 - 8:10 AM
                      option(value='9') 8:10 - 8:20 AM
                      option(value='10') 8:20 - 8:30 AM
                      option(value='11') 8:30 - 8:40 AM
                      option(value='11') 8:30 - 8:40 AM
                      option(value='11') 8:40 - 8:50 AM
                      option(value='11') 9:00 - 9:10 AM
                      option(value='11') 9:10 - 9:20 AM
                      option(value='11') 9:20 - 9:30 AM
                      option(value='11') 9:30 - 9:40 AM
                      option(value='11') 9:40 - 9:50 AM
                      option(value='11') 9:50 - 10:00 AM

              .control.is-horizontal
                .control-label
                  label.label Evening Leaving Time (From Workplace)
                .control
                  .select.is-fullwidth
                    select(name='#', id='#')
                      option(value='8', selected='selected') 6:00 - 6:10 PM
                      option(value='9') 6:10 - 6:20 PM
                      option(value='10') 6:20 - 6:30 PM
                      option(value='11') 6:30 - 6:40 PM
                      option(value='11') 6:30 - 6:40 PM
                      option(value='11') 6:40 - 6:50 PM
                      option(value='11') 7:00 - 7:10 PM
                      option(value='11') 7:10 - 7:20 PM
                      option(value='11') 7:20 - 7:30 PM
                      option(value='11') 7:30 - 7:40 PM
                      option(value='11') 7:40 - 7:50 PM
                      option(value='11') 7:50 - 8:00 PM

              .control.is-horizontal
                .control-label
                  label.label &nbsp;
                .control
                  button.button.is-success
                    | Save

    include footer

    script.
      $(document).ready(function() {
        var startLat, startLng, endLat, endLng;

        startLat = -37.9179738;
        startLng = 145.03256080000006;
        endLat = -37.8136254240211;
        endLng = 144.973235916778;

        $('#home').locationpicker({
          onchanged: function(currentLocation, radius, isMarkerDropped) {
            console.log(currentLocation.latitude, currentLocation.longitude);
          },
          location: {
            latitude: startLat,
            longitude: startLng
          },
          radius: 0,
          inputBinding: {
            locationNameInput: $('#home-address')
          },
          zoom: 18,
          enableAutocomplete: true
        });
        $('#work').locationpicker({
          onchanged: function(currentLocation, radius, isMarkerDropped) {
            endLat = currentLocation.latitude;
            endLong = currentLocation.longitude;
            getPedesCount(startLat, startLng, endLat, endLng);
          },
          location: {
            latitude: endLat,
            longitude: endLng
          },
          radius: 0,
          inputBinding: {
            locationNameInput: $('#work-address')
          },
          zoom: 18,
          enableAutocomplete: true
        });

        function getPedesCount(aLat, aLng, bLat, bLng) {
          // Find Sensor ID
          $.getJSON('data/psensor.json', function(value, key) {
            var data = value.data;
            var arrayLength = data.length;
            var shortDist = Infinity, shortID = 'Cannot Locate';
            for (var i = 0; i < arrayLength; i++) {
              var thisSenID = data[i][8];
              var thisLat = data[i][16];
              var thisLng = data[i][17];
              // Compare distance to work
              var thisDist = Math.sqrt(Math.pow(bLat-thisLat, 2), Math.pow(bLng-thisLng, 2));
              if(thisDist < shortDist) {
                shortDist = thisDist;
                shortID = thisSenID;
              }
            }
            console.log(shortDist, shortID);

            // Find pedestrian in the area
            var pdsobj = $.getJSON('data/pcount.json', function(value, key) {
              var data = value.data;
              // Search for sensor ID
              var arrayLength = data.length;
              for (var i = 0; i < arrayLength; i++) {
                if(shortID == data[i][15]) {
                  shortName = data[i][16];
                  shortPedes = data[i][17];

                  $('.pdCount').html("<span>" + shortPedes + " people</span>");
                  break;
                }
              }
            });
          });
        }

        getPedesCount(startLat, startLng, endLat, endLng);
      });